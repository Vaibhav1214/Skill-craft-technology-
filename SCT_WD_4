<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>To-Do App</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #1e1e2f;
      color: #fff;
      margin: 0;
      padding: 20px;
      display: flex;
      justify-content: center;
    }

    .container {
      width: 100%;
      max-width: 600px;
    }

    h1 {
      text-align: center;
      color: #00adb5;
    }

    .task-input {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 20px;
    }

    input[type="text"],
    input[type="datetime-local"] {
      flex: 1;
      padding: 10px;
      border: none;
      border-radius: 5px;
    }

    button {
      padding: 10px 15px;
      background-color: #00adb5;
      border: none;
      color: white;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background-color: #00ffff;
    }

    .task-list {
      list-style: none;
      padding: 0;
    }

    .task {
      background: #333;
      margin-bottom: 10px;
      padding: 10px;
      border-radius: 8px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }

    .task.completed {
      text-decoration: line-through;
      background-color: #2f4f4f;
    }

    .task-info {
      flex: 1;
    }

    .task-controls {
      display: flex;
      gap: 5px;
    }

    .task-time {
      font-size: 0.8rem;
      color: #ccc;
    }

    input.edit-input {
      margin-top: 5px;
      padding: 5px;
      width: 100%;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>To-Do App</h1>

    <div class="task-input">
      <input type="text" id="taskInput" placeholder="Enter task..." />
      <input type="datetime-local" id="taskTime" />
      <button onclick="addTask()">Add Task</button>
    </div>

    <ul class="task-list" id="taskList"></ul>
  </div>

  <script>
    let tasks = [];

    function addTask() {
      const taskText = document.getElementById("taskInput").value.trim();
      const taskTime = document.getElementById("taskTime").value;

      if (taskText === "") return;

      tasks.push({
        text: taskText,
        time: taskTime,
        completed: false,
      });

      document.getElementById("taskInput").value = "";
      document.getElementById("taskTime").value = "";
      renderTasks();
    }

    function renderTasks() {
      const list = document.getElementById("taskList");
      list.innerHTML = "";

      tasks.forEach((task, index) => {
        const li = document.createElement("li");
        li.className = "task" + (task.completed ? " completed" : "");

        const taskInfo = document.createElement("div");
        taskInfo.className = "task-info";

        const text = document.createElement("div");
        text.textContent = task.text;

        const time = document.createElement("div");
        time.className = "task-time";
        time.textContent = task.time ? Due: ${new Date(task.time).toLocaleString()} : "";

        taskInfo.appendChild(text);
        taskInfo.appendChild(time);

        const controls = document.createElement("div");
        controls.className = "task-controls";

        const completeBtn = document.createElement("button");
        completeBtn.textContent = task.completed ? "Undo" : "✔";
        completeBtn.onclick = () => toggleComplete(index);

        const editBtn = document.createElement("button");
        editBtn.textContent = "✏";
        editBtn.onclick = () => editTask(index);

        const deleteBtn = document.createElement("button");
        deleteBtn.textContent = "🗑";
        deleteBtn.onclick = () => deleteTask(index);

        controls.appendChild(completeBtn);
        controls.appendChild(editBtn);
        controls.appendChild(deleteBtn);

        li.appendChild(taskInfo);
        li.appendChild(controls);
        list.appendChild(li);
      });
    }

    function toggleComplete(index) {
      tasks[index].completed = !tasks[index].completed;
      renderTasks();
    }

    function editTask(index) {
      const newText = prompt("Edit your task:", tasks[index].text);
      if (newText !== null && newText.trim() !== "") {
        tasks[index].text = newText.trim();
        renderTasks();
      }
    }

    function deleteTask(index) {
      if (confirm("Delete this task?")) {
        tasks.splice(index, 1);
        renderTasks();
      }
    }
  </script>
</body>
</html>
